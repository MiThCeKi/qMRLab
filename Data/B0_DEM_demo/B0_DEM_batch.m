<<<<<<< HEAD
%Place in the right folder to run
cdmfile('B0_DEM_batch.m');

%% DESCRIPTION
help B0_DEM
% Batch to generate B0map with Dual Echo Method (DEM) without qMRLab GUI (graphical user interface)
% Run this script line by line
% Written by: Ian Gagnon, 2017

%**************************************************************************
%% I- LOAD MODEL and DATA
%**************************************************************************
% create your Model
  Model = B0_DEM;
% Alternatively, load your parameters
%  Model = qMRloadModel('qMRLab_B0_DEMObj.mat');
%% Check data and fitting (Optional)

%**************************************************************************
% A- GENERATE FILE STRUCT
%**************************************************************************
% Create a struct "file" that contains the NAME of all data's FILES
% file.DATA = 'DATA_FILE';
file = struct;
file.Phase = 'Phase.nii.gz';
file.Magn = 'Magn.nii.gz';

%**************************************************************************
% B- CHECK DATA 
%**************************************************************************
%qMRLab(Model,file);

%**************************************************************************
%% II- Create Quantitative Maps
%**************************************************************************
% 1. LOAD PROTOCOL
%**************************************************************************
% Echo (time in millisec)
TE2 = 1.92e-3;
Model.Prot.TimingTable.Mat = TE2;

% Update the model
Model = Model.UpdateFields;

%**************************************************************************
% 2. LOAD EXPERIMENTAL DATA
%**************************************************************************
% Create a struct "data" that contains all the data
% .MAT file : load('DATA_FILE');
%             data.DATA = double(DATA);
% .NII file : data.DATA = double(load_nii_data('DATA_FILE'));
data.Phase = double(load_nii_data('Phase.nii.gz'));
data.Magn  = double(load_nii_data('Magn.nii.gz'));

%**************************************************************************
% 3.- FIT DATASET
%**************************************************************************
FitResults       = FitData(data,Model,1); % 3rd argument plots a waitbar
FitResults.Model = Model;

%**************************************************************************
%% IV- Check the Results
%**************************************************************************
imagesc3D(FitResults.B0map,[-100 100]); colormap jet; axis off; colorbar

%**************************************************************************
%% V- SAVE
%**************************************************************************
% .MAT file : FitResultsSave_mat(FitResults,folder);
% .NII file : FitResultsSave_nii(FitResults,fname_copyheader,folder);
FitResultsSave_nii(FitResults,'Phase.nii.gz');
% qMRsaveModel(Model, 'B0_DEM.qMRLab.mat'); % save the model object 
=======
% Command Line Interface (CLI) is well-suited for automatization 
% purposes and Octave. 

% Please execute this m-file section by section to get familiar with batch
% processing for B0_DEM on CLI.

% This m-file has been automatically generated by qMRgenBatch function. 

% This script has been manually modified for MoxUnit.

% Written by: Agah Karakuzu, 2017
% =========================================================================

%% AUXILIARY SECTION - (OPTIONAL) -----------------------------------------
% -------------------------------------------------------------------------

qMRinfo('B0_DEM'); % Display help 
[pathstr,fname,ext]=fileparts(which('B0_DEM_batch.m'));
cd (pathstr);

%% STEP|CREATE MODEL OBJECT -----------------------------------------------
%  (1) |- This section is a one-liner.
% -------------------------------------------------------------------------

Model = B0_DEM; % Create model object

%% STEP |CHECK DATA AND FITTING - (OPTIONAL) ------------------------------
%  (2)	|- This section will pop-up the options GUI. (MATLAB Only)
%		|- Octave is not GUI compatible. 
% -------------------------------------------------------------------------

if not(moxunit_util_platform_is_octave) % ---> If MATLAB
Custom_OptionsGUI(Model);
Model = getappdata(0,'Model');
end



%% STEP |LOAD PROTOCOL ----------------------------------------------------
%  (3)	|- Respective command lines appear if required by B0_DEM. 
% -------------------------------------------------------------------------

% B0_DEM object needs 1 protocol field(s) to be assigned:
 

% TimingTable
% --------------
% deltaTE is a vector of [1X1]
deltaTE = [0.0019];
Model.Prot.TimingTable.Mat = [ deltaTE];
% -----------------------------------------



%% STEP |LOAD EXPERIMENTAL DATA -------------------------------------------
%  (4)	|- Respective command lines appear if required by B0_DEM. 
% -------------------------------------------------------------------------
% B0_DEM object needs 2 data input(s) to be assigned:
 

% Phase
% Magn
% --------------

data = struct();
% Magn.nii.gz contains [64  64   1   8] data.
data.Phase=double(load_nii_data('Magn.nii.gz'));
% Phase.nii.gz contains [64  64   1   8] data.
data.Magn=double(load_nii_data('Phase.nii.gz'));
 

%% STEP |FIT DATASET ------------------------------------------------------
%  (5)  |- This section will fit data. 
% -------------------------------------------------------------------------

FitResults = FitData(data,Model,0);

FitResults.Model = Model; % qMRLab output.

%% STEP |CHECK FITTING RESULT IN A VOXEL - (OPTIONAL) ---------------------
%   (6)	|- To observe outputs, please execute the lines in this section.
% -------------------------------------------------------------------------


% outputIm = FitResults.(FitResults.fields{1});

% row = round(size(outputIm,1)/2);
% col = round(size(outputIm,2)/2);
% voxel           = [row, col, 1]; % Please adapt 3rd index if 3D. 

% Show plot.  ---> 
% figure();
% FitResultsVox   = extractvoxel(FitResults,voxel,FitResults.fields);
% dataVox         = extractvoxel(data,voxel);
% Model.plotModel(FitResultsVox,dataVox)

% Show image itself. ---> 
% figure();
% imagesc(outputIm); colorbar(); title(FitResults.fields{1});


%% STEP |SAVE -------------------------------------------------------------
%  	(7) |- Save your outputs. 
% -------------------------------------------------------------------------

if moxunit_util_platform_is_octave % ---> If Octave 

save -mat7-binary 'B0_DEM_FitResultsOctave.mat' 'FitResults';

else % ---> If MATLAB 

qMRsaveModel(Model,'B0_DEM.qMRLab.mat'); 

end

% You can save outputs in Nifti format using FirResultSave_nii function:
% Plase see qMRinfo('FitResultsSave_nii')




>>>>>>> 2ee6d2dbaf24f87e1f346d1412f3361c6f9206e2
